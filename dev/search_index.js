var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = ColonyImages","category":"page"},{"location":"#ColonyImages","page":"Home","title":"ColonyImages","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ColonyImages.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [ColonyImages]","category":"page"},{"location":"#ColonyImages.expand_colony_fractal_radom_cov!-Tuple{Any, Any}","page":"Home","title":"ColonyImages.expand_colony_fractal_radom_cov!","text":"Expands colony randomly but it is more likely to expand to points that only have 2 neigboors or less\n\n\n\n\n\n","category":"method"},{"location":"#ColonyImages.find_peaks-Tuple{Any}","page":"Home","title":"ColonyImages.find_peaks","text":"Finds the local maxima inside a 1D signal, in areas where the  signal exceed an its mean value by a given factor\n\n\n\n\n\n","category":"method"},{"location":"#ColonyImages.generate_dir_vec-Tuple{Any, Any}","page":"Home","title":"ColonyImages.generate_dir_vec","text":"Generates vectors of x and y coordinates that span vectors ranging from 0 to 2Ï€     Execute the following code to understand how this function works.\n\n    using CairoMakie\n    number_vecs = 20\n    y,x = generate_dir_vec(20,0.1)\n    yy = zeros(number_vecs)\n    arrows(yy,yy, y, x)\n\n\n\n\n\n","category":"method"},{"location":"#ColonyImages.lattice_points-Tuple{Int64}","page":"Home","title":"ColonyImages.lattice_points","text":"Calcultes ascending integer pairs which fit into a circle with radius r. The return type is a Vector{Vector{Vector{Int}}} where as the first index is corresponds to r and the second for a individual pair\n\n\n\n\n\n","category":"method"},{"location":"#ColonyImages.rad2deg_discrete-Tuple{Any}","page":"Home","title":"ColonyImages.rad2deg_discrete","text":"Helper functions for angular metric, takes an angle in radiants as input and a number of circular sectors into which a unit circle is divided. The output is the number of circular sector to which the angle corresponds. E.g angle = 0.0 ,steps = 360 ;output = 1 which is first circular sector on the unit circle, EG.  angle = (2pi -0.01), steps = 360, output = 360, last circular sector ranging from 2pi -0.01), steps = 360, output = 360, last circular sector ranging from [2pi/steps *(steps-1) - 2pi)\n\n\n\n\n\n","category":"method"}]
}
